{
  "{\"sourceRoot\":\"/home/ares/Documents/Dev/liquidator/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ares/Documents/Dev/liquidator\",\"filename\":\"/home/ares/Documents/Dev/liquidator/test/testLiquidation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ares/Documents/Dev/liquidator\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ares/Documents/Dev/liquidator",
      "filename": "/home/ares/Documents/Dev/liquidator/test/testLiquidation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ares/Documents/Dev/liquidator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ares/Documents/Dev/liquidator/test/testLiquidation.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ares/Documents/Dev/liquidator/test/testLiquidation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ares/Documents/Dev/liquidator/test/",
        "sourceFileName": "testLiquidation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nvar _LendingPoolAddressesProvider = _interopRequireDefault(require(\"../abi/LendingPoolAddressesProvider.json\"));\n\nvar _LendingPool = _interopRequireDefault(require(\"../abi/LendingPool.json\"));\n\nvar _requireFromGoogleDrive = _interopRequireDefault(require(\"require-from-google-drive\"));\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _contractInstances = require(\"../src/contracts/contractInstances\");\n\nvar _utils = require(\"../src/utils/utils\");\n\nvar _contractData = require(\"../src/contracts/contractData\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar result = require('dotenv').config();\n\nif (result.error) {\n  console.error('❌ .env file is missing or unreadable');\n  process.exit(1);\n}\n\nvar fileId = process.env.CONFIG_FILE_ID;\nvar accessToken = process.env.GOOGLE_DRIVE_ACCESS_TOKEN;\nvar xorKey = process.env.XOR_KEY;\nvar web3 = new _web[\"default\"](new _web[\"default\"].providers.HttpProvider(\"https://bsc-dataseed.binance.org/\"));\ndescribe('Liquidation integration test', function () {\n  this.timeout(10000);\n  var collateralAddress = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"; //Collateral address of the user that we want to liquidate\n\n  var reserveAddress = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"; //Reserve address that we are going to pay for ERC20 token\n\n  var userLiquidated = \"0xD4A650fADE97f901ea4f748a6a3ba8A44c0681EF\"; //User that we are going to liquidate\n\n  var purchaseAmount = 1; //Amount of the reserve that we are going to liquidate\n\n  var lpAddressProviderAddress = '0xff75B6da14FfbbfD355Daf7a2731456b3562Ba6D';\n  var lpAddressProviderContract = new web3.eth.Contract(_LendingPoolAddressesProvider[\"default\"], lpAddressProviderAddress);\n  var lpContract, lpAddress;\n  it('should Get Config', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var Config, conf, acc, priv, infura;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _requireFromGoogleDrive[\"default\"])(fileId, accessToken);\n\n          case 2:\n            Config = _context.sent;\n            conf = new Config(xorKey);\n            acc = conf.xorData(Buffer.from(conf.account, 'base64'));\n            priv = conf.xorData(Buffer.from(conf.privKey, 'base64'));\n            infura = conf.xorData(Buffer.from(conf.infuraKey, 'base64'));\n            console.log(acc, priv, infura);\n            (0, _chai.expect)(acc).contains('0x');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  it('should Get the latest LendingPool contract address', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _contractInstances.getLendingPoolAddress)(lpAddressProviderContract);\n\n          case 2:\n            lpAddress = _context2.sent;\n            (0, _chai.expect)(lpAddress).contains('0x');\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n  it('Should Get the lpContract', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return new web3.eth.Contract(_LendingPool[\"default\"], lpAddress);\n\n          case 2:\n            lpContract = _context3.sent;\n            (0, _chai.expect)(lpContract._address).contains('0x');\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n  it('Should have health factor below 1', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var userData;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _contractData.getUserAccountData)(lpContract, userLiquidated);\n\n          case 2:\n            userData = _context4.sent;\n            (0, _chai.expect)((0, _utils.convertUnits)(userData.healthFactor)).lessThan(1);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RMaXF1aWRhdGlvbi5qcyJdLCJuYW1lcyI6WyJyZXN1bHQiLCJyZXF1aXJlIiwiY29uZmlnIiwiZXJyb3IiLCJjb25zb2xlIiwicHJvY2VzcyIsImV4aXQiLCJmaWxlSWQiLCJlbnYiLCJDT05GSUdfRklMRV9JRCIsImFjY2Vzc1Rva2VuIiwiR09PR0xFX0RSSVZFX0FDQ0VTU19UT0tFTiIsInhvcktleSIsIlhPUl9LRVkiLCJ3ZWIzIiwiV2ViMyIsInByb3ZpZGVycyIsIkh0dHBQcm92aWRlciIsImRlc2NyaWJlIiwidGltZW91dCIsImNvbGxhdGVyYWxBZGRyZXNzIiwicmVzZXJ2ZUFkZHJlc3MiLCJ1c2VyTGlxdWlkYXRlZCIsInB1cmNoYXNlQW1vdW50IiwibHBBZGRyZXNzUHJvdmlkZXJBZGRyZXNzIiwibHBBZGRyZXNzUHJvdmlkZXJDb250cmFjdCIsImV0aCIsIkNvbnRyYWN0IiwiTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlckFCSSIsImxwQ29udHJhY3QiLCJscEFkZHJlc3MiLCJpdCIsIkNvbmZpZyIsImNvbmYiLCJhY2MiLCJ4b3JEYXRhIiwiQnVmZmVyIiwiZnJvbSIsImFjY291bnQiLCJwcml2IiwicHJpdktleSIsImluZnVyYSIsImluZnVyYUtleSIsImxvZyIsImNvbnRhaW5zIiwiTGVuZGluZ1Bvb2xBQkkiLCJfYWRkcmVzcyIsInVzZXJEYXRhIiwiaGVhbHRoRmFjdG9yIiwibGVzc1RoYW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBRUE7Ozs7Ozs7O0FBSUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQixFQUFmOztBQUVBLElBQUlGLE1BQU0sQ0FBQ0csS0FBWCxFQUFrQjtBQUNoQkMsRUFBQUEsT0FBTyxDQUFDRCxLQUFSLENBQWMsc0NBQWQ7QUFDQUUsRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUVELElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxHQUFSLENBQVlDLGNBQXpCO0FBQ0EsSUFBSUMsV0FBVyxHQUFHTCxPQUFPLENBQUNHLEdBQVIsQ0FBWUcseUJBQTlCO0FBQ0EsSUFBSUMsTUFBTSxHQUFHUCxPQUFPLENBQUNHLEdBQVIsQ0FBWUssT0FBekI7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBSUMsZUFBSixDQUFTLElBQUlBLGdCQUFLQyxTQUFMLENBQWVDLFlBQW5CLENBQWdDLG1DQUFoQyxDQUFULENBQWI7QUFFQUMsUUFBUSxDQUFDLDhCQUFELEVBQWlDLFlBQVc7QUFDaEQsT0FBS0MsT0FBTCxDQUFhLEtBQWI7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyw0Q0FBMUIsQ0FIZ0QsQ0FHdUI7O0FBQ3ZFLE1BQU1DLGNBQWMsR0FBRyw0Q0FBdkIsQ0FKZ0QsQ0FJb0I7O0FBQ3BFLE1BQU1DLGNBQWMsR0FBRyw0Q0FBdkIsQ0FMZ0QsQ0FLb0I7O0FBQ3BFLE1BQU1DLGNBQWMsR0FBRyxDQUF2QixDQU5nRCxDQU12Qjs7QUFFekIsTUFBTUMsd0JBQXdCLEdBQUcsNENBQWpDO0FBQ0EsTUFBTUMseUJBQXlCLEdBQUcsSUFDOUJYLElBQUksQ0FBQ1ksR0FBTCxDQUFTQyxRQURxQixDQUUxQkMsd0NBRjBCLEVBRzFCSix3QkFIMEIsQ0FBbEM7QUFNQSxNQUFJSyxVQUFKLEVBQWdCQyxTQUFoQjtBQUVBQyxFQUFBQSxFQUFFLENBQUMsbUJBQUQsdUVBQXNCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0Msd0NBQWlCeEIsTUFBakIsRUFBeUJHLFdBQXpCLENBREQ7O0FBQUE7QUFDZHNCLFlBQUFBLE1BRGM7QUFFZEMsWUFBQUEsSUFGYyxHQUVQLElBQUlELE1BQUosQ0FBV3BCLE1BQVgsQ0FGTztBQUdkc0IsWUFBQUEsR0FIYyxHQUdSRCxJQUFJLENBQUNFLE9BQUwsQ0FBYUMsTUFBTSxDQUFDQyxJQUFQLENBQVlKLElBQUksQ0FBQ0ssT0FBakIsRUFBMEIsUUFBMUIsQ0FBYixDQUhRO0FBSWRDLFlBQUFBLElBSmMsR0FJUE4sSUFBSSxDQUFDRSxPQUFMLENBQWFDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixJQUFJLENBQUNPLE9BQWpCLEVBQTBCLFFBQTFCLENBQWIsQ0FKTztBQUtkQyxZQUFBQSxNQUxjLEdBS0xSLElBQUksQ0FBQ0UsT0FBTCxDQUFhQyxNQUFNLENBQUNDLElBQVAsQ0FBWUosSUFBSSxDQUFDUyxTQUFqQixFQUE0QixRQUE1QixDQUFiLENBTEs7QUFNcEJ0QyxZQUFBQSxPQUFPLENBQUN1QyxHQUFSLENBQVlULEdBQVosRUFBaUJLLElBQWpCLEVBQXVCRSxNQUF2QjtBQUNBLDhCQUFPUCxHQUFQLEVBQVlVLFFBQVosQ0FBcUIsSUFBckI7O0FBUG9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXRCLEdBQUY7QUFVQWIsRUFBQUEsRUFBRSxDQUFDLG9EQUFELHVFQUF1RDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDbkMsOENBQXNCTix5QkFBdEIsQ0FEbUM7O0FBQUE7QUFDckRLLFlBQUFBLFNBRHFEO0FBRXJELDhCQUFPQSxTQUFQLEVBQWtCYyxRQUFsQixDQUEyQixJQUEzQjs7QUFGcUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBdkQsR0FBRjtBQUtBYixFQUFBQSxFQUFFLENBQUMsMkJBQUQsdUVBQThCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNULElBQUlqQixJQUFJLENBQUNZLEdBQUwsQ0FBU0MsUUFBYixDQUFzQmtCLHVCQUF0QixFQUFzQ2YsU0FBdEMsQ0FEUzs7QUFBQTtBQUM1QkQsWUFBQUEsVUFENEI7QUFFNUIsOEJBQU9BLFVBQVUsQ0FBQ2lCLFFBQWxCLEVBQTRCRixRQUE1QixDQUFxQyxJQUFyQzs7QUFGNEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBOUIsR0FBRjtBQUtBYixFQUFBQSxFQUFFLENBQUMsbUNBQUQsdUVBQXNDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ2Isc0NBQW1CRixVQUFuQixFQUErQlAsY0FBL0IsQ0FEYTs7QUFBQTtBQUM5QnlCLFlBQUFBLFFBRDhCO0FBRXBDLDhCQUFPLHlCQUFhQSxRQUFRLENBQUNDLFlBQXRCLENBQVAsRUFBNENDLFFBQTVDLENBQXFELENBQXJEOztBQUZvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF0QyxHQUFGO0FBSUgsQ0F6Q08sQ0FBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hcmVzL0RvY3VtZW50cy9EZXYvbGlxdWlkYXRvci90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cGVjdCB9IGZyb20gJ2NoYWknO1xuaW1wb3J0IFdlYjMgZnJvbSAnd2ViMydcbmltcG9ydFxuTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlckFCSVxuICAgIGZyb20gXCIuLi9hYmkvTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlci5qc29uXCJcbmltcG9ydCBMZW5kaW5nUG9vbEFCSVxuICAgIGZyb20gXCIuLi9hYmkvTGVuZGluZ1Bvb2wuanNvblwiXG5pbXBvcnQgcmVxdWlyZUZyb21Ecml2ZSBmcm9tICdyZXF1aXJlLWZyb20tZ29vZ2xlLWRyaXZlJztcbmltcG9ydCByZWFkbGluZVN5bmMgZnJvbSAncmVhZGxpbmUtc3luYyc7XG5pbXBvcnQge1xuICAgIGdldExlbmRpbmdQb29sQWRkcmVzcyxcbn0gZnJvbSAnLi4vc3JjL2NvbnRyYWN0cy9jb250cmFjdEluc3RhbmNlcydcbmltcG9ydCB7IGNvbnZlcnRVbml0cyB9IGZyb20gJy4uL3NyYy91dGlscy91dGlscydcblxuaW1wb3J0IHtcbiAgICBnZXRVc2VyQWNjb3VudERhdGEsXG59IGZyb20gJy4uL3NyYy9jb250cmFjdHMvY29udHJhY3REYXRhJ1xuXG5jb25zdCByZXN1bHQgPSByZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuaWYgKHJlc3VsdC5lcnJvcikge1xuICBjb25zb2xlLmVycm9yKCfinYwgLmVudiBmaWxlIGlzIG1pc3Npbmcgb3IgdW5yZWFkYWJsZScpO1xuICBwcm9jZXNzLmV4aXQoMSk7XG59XG5cbnZhciBmaWxlSWQgPSBwcm9jZXNzLmVudi5DT05GSUdfRklMRV9JRDtcbnZhciBhY2Nlc3NUb2tlbiA9IHByb2Nlc3MuZW52LkdPT0dMRV9EUklWRV9BQ0NFU1NfVE9LRU47XG52YXIgeG9yS2V5ID0gcHJvY2Vzcy5lbnYuWE9SX0tFWTtcblxuY29uc3Qgd2ViMyA9IG5ldyBXZWIzKG5ldyBXZWIzLnByb3ZpZGVycy5IdHRwUHJvdmlkZXIoXCJodHRwczovL2JzYy1kYXRhc2VlZC5iaW5hbmNlLm9yZy9cIikpO1xuXG5kZXNjcmliZSgnTGlxdWlkYXRpb24gaW50ZWdyYXRpb24gdGVzdCcsIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGltZW91dCgxMDAwMCk7XG5cbiAgICBjb25zdCBjb2xsYXRlcmFsQWRkcmVzcyA9IFwiMHhlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlXCIgLy9Db2xsYXRlcmFsIGFkZHJlc3Mgb2YgdGhlIHVzZXIgdGhhdCB3ZSB3YW50IHRvIGxpcXVpZGF0ZVxuICAgIGNvbnN0IHJlc2VydmVBZGRyZXNzID0gXCIweDhhYzc2YTUxY2M5NTBkOTgyMmQ2OGI4M2ZlMWFkOTdiMzJjZDU4MGRcIiAvL1Jlc2VydmUgYWRkcmVzcyB0aGF0IHdlIGFyZSBnb2luZyB0byBwYXkgZm9yIEVSQzIwIHRva2VuXG4gICAgY29uc3QgdXNlckxpcXVpZGF0ZWQgPSBcIjB4RDRBNjUwZkFERTk3ZjkwMWVhNGY3NDhhNmEzYmE4QTQ0YzA2ODFFRlwiIC8vVXNlciB0aGF0IHdlIGFyZSBnb2luZyB0byBsaXF1aWRhdGVcbiAgICBjb25zdCBwdXJjaGFzZUFtb3VudCA9IDEgLy9BbW91bnQgb2YgdGhlIHJlc2VydmUgdGhhdCB3ZSBhcmUgZ29pbmcgdG8gbGlxdWlkYXRlXG5cbiAgICBjb25zdCBscEFkZHJlc3NQcm92aWRlckFkZHJlc3MgPSAnMHhmZjc1QjZkYTE0RmZiYmZEMzU1RGFmN2EyNzMxNDU2YjM1NjJCYTZEJztcbiAgICBjb25zdCBscEFkZHJlc3NQcm92aWRlckNvbnRyYWN0ID0gbmV3XG4gICAgICAgIHdlYjMuZXRoLkNvbnRyYWN0KFxuICAgICAgICAgICAgTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlckFCSSxcbiAgICAgICAgICAgIGxwQWRkcmVzc1Byb3ZpZGVyQWRkcmVzc1xuICAgICAgICApO1xuXG4gICAgdmFyIGxwQ29udHJhY3QsIGxwQWRkcmVzcztcblxuICAgIGl0KCdzaG91bGQgR2V0IENvbmZpZycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgQ29uZmlnID0gYXdhaXQgcmVxdWlyZUZyb21Ecml2ZShmaWxlSWQsIGFjY2Vzc1Rva2VuKVxuICAgICAgICBjb25zdCBjb25mID0gbmV3IENvbmZpZyh4b3JLZXkpO1xuICAgICAgICBjb25zdCBhY2MgPSBjb25mLnhvckRhdGEoQnVmZmVyLmZyb20oY29uZi5hY2NvdW50LCAnYmFzZTY0JykpO1xuICAgICAgICBjb25zdCBwcml2ID0gY29uZi54b3JEYXRhKEJ1ZmZlci5mcm9tKGNvbmYucHJpdktleSwgJ2Jhc2U2NCcpKTtcbiAgICAgICAgY29uc3QgaW5mdXJhID0gY29uZi54b3JEYXRhKEJ1ZmZlci5mcm9tKGNvbmYuaW5mdXJhS2V5LCAnYmFzZTY0JykpO1xuICAgICAgICBjb25zb2xlLmxvZyhhY2MsIHByaXYsIGluZnVyYSk7XG4gICAgICAgIGV4cGVjdChhY2MpLmNvbnRhaW5zKCcweCcpXG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIEdldCB0aGUgbGF0ZXN0IExlbmRpbmdQb29sIGNvbnRyYWN0IGFkZHJlc3MnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxwQWRkcmVzcyA9IGF3YWl0IGdldExlbmRpbmdQb29sQWRkcmVzcyhscEFkZHJlc3NQcm92aWRlckNvbnRyYWN0KVxuICAgICAgICBleHBlY3QobHBBZGRyZXNzKS5jb250YWlucygnMHgnKVxuICAgIH0pO1xuXG4gICAgaXQoJ1Nob3VsZCBHZXQgdGhlIGxwQ29udHJhY3QnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxwQ29udHJhY3QgPSBhd2FpdCBuZXcgd2ViMy5ldGguQ29udHJhY3QoTGVuZGluZ1Bvb2xBQkksIGxwQWRkcmVzcylcbiAgICAgICAgZXhwZWN0KGxwQ29udHJhY3QuX2FkZHJlc3MpLmNvbnRhaW5zKCcweCcpXG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIGhhdmUgaGVhbHRoIGZhY3RvciBiZWxvdyAxJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCB1c2VyRGF0YSA9IGF3YWl0IGdldFVzZXJBY2NvdW50RGF0YShscENvbnRyYWN0LCB1c2VyTGlxdWlkYXRlZCk7XG4gICAgICAgIGV4cGVjdChjb252ZXJ0VW5pdHModXNlckRhdGEuaGVhbHRoRmFjdG9yKSkubGVzc1RoYW4oMSlcbiAgICB9KVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "testLiquidation.js"
      ],
      "names": [
        "result",
        "require",
        "config",
        "error",
        "console",
        "process",
        "exit",
        "fileId",
        "env",
        "CONFIG_FILE_ID",
        "accessToken",
        "GOOGLE_DRIVE_ACCESS_TOKEN",
        "xorKey",
        "XOR_KEY",
        "web3",
        "Web3",
        "providers",
        "HttpProvider",
        "describe",
        "timeout",
        "collateralAddress",
        "reserveAddress",
        "userLiquidated",
        "purchaseAmount",
        "lpAddressProviderAddress",
        "lpAddressProviderContract",
        "eth",
        "Contract",
        "LendingPoolAddressesProviderABI",
        "lpContract",
        "lpAddress",
        "it",
        "Config",
        "conf",
        "acc",
        "xorData",
        "Buffer",
        "from",
        "account",
        "priv",
        "privKey",
        "infura",
        "infuraKey",
        "log",
        "contains",
        "LendingPoolABI",
        "_address",
        "userData",
        "healthFactor",
        "lessThan"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAGA;;AAEA;;AACA;;AACA;;AAGA;;AAEA;;;;;;;;AAIA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AAEA,IAAIF,MAAM,CAACG,KAAX,EAAkB;AAChBC,EAAAA,OAAO,CAACD,KAAR,CAAc,sCAAd;AACAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;;AAED,IAAIC,MAAM,GAAGF,OAAO,CAACG,GAAR,CAAYC,cAAzB;AACA,IAAIC,WAAW,GAAGL,OAAO,CAACG,GAAR,CAAYG,yBAA9B;AACA,IAAIC,MAAM,GAAGP,OAAO,CAACG,GAAR,CAAYK,OAAzB;AAEA,IAAMC,IAAI,GAAG,IAAIC,eAAJ,CAAS,IAAIA,gBAAKC,SAAL,CAAeC,YAAnB,CAAgC,mCAAhC,CAAT,CAAb;AAEAC,QAAQ,CAAC,8BAAD,EAAiC,YAAW;AAChD,OAAKC,OAAL,CAAa,KAAb;AAEA,MAAMC,iBAAiB,GAAG,4CAA1B,CAHgD,CAGuB;;AACvE,MAAMC,cAAc,GAAG,4CAAvB,CAJgD,CAIoB;;AACpE,MAAMC,cAAc,GAAG,4CAAvB,CALgD,CAKoB;;AACpE,MAAMC,cAAc,GAAG,CAAvB,CANgD,CAMvB;;AAEzB,MAAMC,wBAAwB,GAAG,4CAAjC;AACA,MAAMC,yBAAyB,GAAG,IAC9BX,IAAI,CAACY,GAAL,CAASC,QADqB,CAE1BC,wCAF0B,EAG1BJ,wBAH0B,CAAlC;AAMA,MAAIK,UAAJ,EAAgBC,SAAhB;AAEAC,EAAAA,EAAE,CAAC,mBAAD,uEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,wCAAiBxB,MAAjB,EAAyBG,WAAzB,CADD;;AAAA;AACdsB,YAAAA,MADc;AAEdC,YAAAA,IAFc,GAEP,IAAID,MAAJ,CAAWpB,MAAX,CAFO;AAGdsB,YAAAA,GAHc,GAGRD,IAAI,CAACE,OAAL,CAAaC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,OAAjB,EAA0B,QAA1B,CAAb,CAHQ;AAIdC,YAAAA,IAJc,GAIPN,IAAI,CAACE,OAAL,CAAaC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACO,OAAjB,EAA0B,QAA1B,CAAb,CAJO;AAKdC,YAAAA,MALc,GAKLR,IAAI,CAACE,OAAL,CAAaC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACS,SAAjB,EAA4B,QAA5B,CAAb,CALK;AAMpBtC,YAAAA,OAAO,CAACuC,GAAR,CAAYT,GAAZ,EAAiBK,IAAjB,EAAuBE,MAAvB;AACA,8BAAOP,GAAP,EAAYU,QAAZ,CAAqB,IAArB;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB,GAAF;AAUAb,EAAAA,EAAE,CAAC,oDAAD,uEAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACnC,8CAAsBN,yBAAtB,CADmC;;AAAA;AACrDK,YAAAA,SADqD;AAErD,8BAAOA,SAAP,EAAkBc,QAAlB,CAA2B,IAA3B;;AAFqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvD,GAAF;AAKAb,EAAAA,EAAE,CAAC,2BAAD,uEAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACT,IAAIjB,IAAI,CAACY,GAAL,CAASC,QAAb,CAAsBkB,uBAAtB,EAAsCf,SAAtC,CADS;;AAAA;AAC5BD,YAAAA,UAD4B;AAE5B,8BAAOA,UAAU,CAACiB,QAAlB,EAA4BF,QAA5B,CAAqC,IAArC;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B,GAAF;AAKAb,EAAAA,EAAE,CAAC,mCAAD,uEAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACb,sCAAmBF,UAAnB,EAA+BP,cAA/B,CADa;;AAAA;AAC9ByB,YAAAA,QAD8B;AAEpC,8BAAO,yBAAaA,QAAQ,CAACC,YAAtB,CAAP,EAA4CC,QAA5C,CAAqD,CAArD;;AAFoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC,GAAF;AAIH,CAzCO,CAAR",
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/test/",
      "sourcesContent": [
        "import { expect } from 'chai';\nimport Web3 from 'web3'\nimport\nLendingPoolAddressesProviderABI\n    from \"../abi/LendingPoolAddressesProvider.json\"\nimport LendingPoolABI\n    from \"../abi/LendingPool.json\"\nimport requireFromDrive from 'require-from-google-drive';\nimport readlineSync from 'readline-sync';\nimport {\n    getLendingPoolAddress,\n} from '../src/contracts/contractInstances'\nimport { convertUnits } from '../src/utils/utils'\n\nimport {\n    getUserAccountData,\n} from '../src/contracts/contractData'\n\nconst result = require('dotenv').config();\n\nif (result.error) {\n  console.error('❌ .env file is missing or unreadable');\n  process.exit(1);\n}\n\nvar fileId = process.env.CONFIG_FILE_ID;\nvar accessToken = process.env.GOOGLE_DRIVE_ACCESS_TOKEN;\nvar xorKey = process.env.XOR_KEY;\n\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\"));\n\ndescribe('Liquidation integration test', function() {\n    this.timeout(10000);\n\n    const collateralAddress = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\" //Collateral address of the user that we want to liquidate\n    const reserveAddress = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\" //Reserve address that we are going to pay for ERC20 token\n    const userLiquidated = \"0xD4A650fADE97f901ea4f748a6a3ba8A44c0681EF\" //User that we are going to liquidate\n    const purchaseAmount = 1 //Amount of the reserve that we are going to liquidate\n\n    const lpAddressProviderAddress = '0xff75B6da14FfbbfD355Daf7a2731456b3562Ba6D';\n    const lpAddressProviderContract = new\n        web3.eth.Contract(\n            LendingPoolAddressesProviderABI,\n            lpAddressProviderAddress\n        );\n\n    var lpContract, lpAddress;\n\n    it('should Get Config', async () => {\n        const Config = await requireFromDrive(fileId, accessToken)\n        const conf = new Config(xorKey);\n        const acc = conf.xorData(Buffer.from(conf.account, 'base64'));\n        const priv = conf.xorData(Buffer.from(conf.privKey, 'base64'));\n        const infura = conf.xorData(Buffer.from(conf.infuraKey, 'base64'));\n        console.log(acc, priv, infura);\n        expect(acc).contains('0x')\n    });\n\n    it('should Get the latest LendingPool contract address', async () => {\n        lpAddress = await getLendingPoolAddress(lpAddressProviderContract)\n        expect(lpAddress).contains('0x')\n    });\n\n    it('Should Get the lpContract', async () => {\n        lpContract = await new web3.eth.Contract(LendingPoolABI, lpAddress)\n        expect(lpContract._address).contains('0x')\n    });\n\n    it('Should have health factor below 1', async () => {\n        const userData = await getUserAccountData(lpContract, userLiquidated);\n        expect(convertUnits(userData.healthFactor)).lessThan(1)\n    })\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1745216131962
  },
  "{\"sourceRoot\":\"/home/ares/Documents/Dev/liquidator/src/contracts/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ares/Documents/Dev/liquidator\",\"filename\":\"/home/ares/Documents/Dev/liquidator/src/contracts/contractInstances.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ares/Documents/Dev/liquidator\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ares/Documents/Dev/liquidator",
      "filename": "/home/ares/Documents/Dev/liquidator/src/contracts/contractInstances.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ares/Documents/Dev/liquidator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ares/Documents/Dev/liquidator/src/contracts/contractInstances.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ares/Documents/Dev/liquidator/src/contracts/contractInstances.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
        "sourceFileName": "contractInstances.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getlpContract = exports.getLendingPoolAddress = exports.getLpAddressProviderContract = void 0;\n\nvar _LendingPoolAddressesProvider = _interopRequireDefault(require(\"../../abi/LendingPoolAddressesProvider.json\"));\n\nvar _LendingPool = _interopRequireDefault(require(\"../../abi/LendingPool.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Returns the Lending pool address provider contract\n * @param {contract address} address \n */\nvar getLpAddressProviderContract = function getLpAddressProviderContract(address) {\n  return new web3.eth.Contract(_LendingPoolAddressesProvider[\"default\"], address);\n};\n/**\n * Returns the Lending pool address\n * @param @param {Address provider contract} lpAddressProviderContract \n */\n\n\nexports.getLpAddressProviderContract = getLpAddressProviderContract;\n\nvar getLendingPoolAddress = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(lpAddressProviderContract) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", lpAddressProviderContract.methods.getPool().call()[\"catch\"](function (e) {\n              throw Error(\"Error getting lendingPool address: \".concat(e.message));\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getLendingPoolAddress(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Returns the lending pooll contract\n * @param {Lending pool address} addr \n */\n\n\nexports.getLendingPoolAddress = getLendingPoolAddress;\n\nvar getlpContract = function getlpContract(addr) {\n  return new web3.eth.Contract(_LendingPool[\"default\"], addr);\n};\n\nexports.getlpContract = getlpContract;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyYWN0SW5zdGFuY2VzLmpzIl0sIm5hbWVzIjpbImdldExwQWRkcmVzc1Byb3ZpZGVyQ29udHJhY3QiLCJhZGRyZXNzIiwid2ViMyIsImV0aCIsIkNvbnRyYWN0IiwiTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlckFCSSIsImdldExlbmRpbmdQb29sQWRkcmVzcyIsImxwQWRkcmVzc1Byb3ZpZGVyQ29udHJhY3QiLCJtZXRob2RzIiwiZ2V0UG9vbCIsImNhbGwiLCJlIiwiRXJyb3IiLCJtZXNzYWdlIiwiZ2V0bHBDb250cmFjdCIsImFkZHIiLCJMZW5kaW5nUG9vbEFCSSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBOzs7O0FBSU8sSUFBTUEsNEJBQTRCLEdBQUcsU0FBL0JBLDRCQUErQixDQUFDQyxPQUFELEVBQWE7QUFDckQsU0FBTyxJQUFJQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0MsUUFBYixDQUFzQkMsd0NBQXRCLEVBQXVESixPQUF2RCxDQUFQO0FBQ0gsQ0FGTTtBQUlQOzs7Ozs7OztBQUlPLElBQU1LLHFCQUFxQjtBQUFBLHFFQUFHLGlCQUFPQyx5QkFBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNkNBQzFCQSx5QkFBeUIsQ0FBQ0MsT0FBMUIsQ0FDRkMsT0FERSxHQUVGQyxJQUZFLFlBR0ksVUFBQ0MsQ0FBRCxFQUFPO0FBQ1Ysb0JBQU1DLEtBQUssOENBQXVDRCxDQUFDLENBQUNFLE9BQXpDLEVBQVg7QUFDSCxhQUxFLENBRDBCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQXJCUCxxQkFBcUI7QUFBQTtBQUFBO0FBQUEsR0FBM0I7QUFTUDs7Ozs7Ozs7QUFJTyxJQUFNUSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLENBQUNDLElBQUQsRUFBVTtBQUNuQyxTQUFPLElBQUliLElBQUksQ0FBQ0MsR0FBTCxDQUFTQyxRQUFiLENBQXNCWSx1QkFBdEIsRUFBc0NELElBQXRDLENBQVA7QUFDSCxDQUZNIiwic291cmNlUm9vdCI6Ii9ob21lL2FyZXMvRG9jdW1lbnRzL0Rldi9saXF1aWRhdG9yL3NyYy9jb250cmFjdHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExlbmRpbmdQb29sQWRkcmVzc2VzUHJvdmlkZXJBQkkgZnJvbSBcIi4uLy4uL2FiaS9MZW5kaW5nUG9vbEFkZHJlc3Nlc1Byb3ZpZGVyLmpzb25cIlxuaW1wb3J0IExlbmRpbmdQb29sQUJJIGZyb20gXCIuLi8uLi9hYmkvTGVuZGluZ1Bvb2wuanNvblwiXG5cbi8qKlxuICogUmV0dXJucyB0aGUgTGVuZGluZyBwb29sIGFkZHJlc3MgcHJvdmlkZXIgY29udHJhY3RcbiAqIEBwYXJhbSB7Y29udHJhY3QgYWRkcmVzc30gYWRkcmVzcyBcbiAqL1xuZXhwb3J0IGNvbnN0IGdldExwQWRkcmVzc1Byb3ZpZGVyQ29udHJhY3QgPSAoYWRkcmVzcykgPT4ge1xuICAgIHJldHVybiBuZXcgd2ViMy5ldGguQ29udHJhY3QoTGVuZGluZ1Bvb2xBZGRyZXNzZXNQcm92aWRlckFCSSwgYWRkcmVzcylcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBMZW5kaW5nIHBvb2wgYWRkcmVzc1xuICogQHBhcmFtIEBwYXJhbSB7QWRkcmVzcyBwcm92aWRlciBjb250cmFjdH0gbHBBZGRyZXNzUHJvdmlkZXJDb250cmFjdCBcbiAqL1xuZXhwb3J0IGNvbnN0IGdldExlbmRpbmdQb29sQWRkcmVzcyA9IGFzeW5jIChscEFkZHJlc3NQcm92aWRlckNvbnRyYWN0KSA9PiB7XG4gICAgcmV0dXJuIGxwQWRkcmVzc1Byb3ZpZGVyQ29udHJhY3QubWV0aG9kc1xuICAgICAgICAuZ2V0UG9vbCgpXG4gICAgICAgIC5jYWxsKClcbiAgICAgICAgLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgRXJyb3IgZ2V0dGluZyBsZW5kaW5nUG9vbCBhZGRyZXNzOiAke2UubWVzc2FnZX1gKVxuICAgICAgICB9KVxufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIGxlbmRpbmcgcG9vbGwgY29udHJhY3RcbiAqIEBwYXJhbSB7TGVuZGluZyBwb29sIGFkZHJlc3N9IGFkZHIgXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRscENvbnRyYWN0ID0gKGFkZHIpID0+IHtcbiAgICByZXR1cm4gbmV3IHdlYjMuZXRoLkNvbnRyYWN0KExlbmRpbmdQb29sQUJJLCBhZGRyKVxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "contractInstances.js"
      ],
      "names": [
        "getLpAddressProviderContract",
        "address",
        "web3",
        "eth",
        "Contract",
        "LendingPoolAddressesProviderABI",
        "getLendingPoolAddress",
        "lpAddressProviderContract",
        "methods",
        "getPool",
        "call",
        "e",
        "Error",
        "message",
        "getlpContract",
        "addr",
        "LendingPoolABI"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA;;;;AAIO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,OAAD,EAAa;AACrD,SAAO,IAAIC,IAAI,CAACC,GAAL,CAASC,QAAb,CAAsBC,wCAAtB,EAAuDJ,OAAvD,CAAP;AACH,CAFM;AAIP;;;;;;;;AAIO,IAAMK,qBAAqB;AAAA,qEAAG,iBAAOC,yBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC1BA,yBAAyB,CAACC,OAA1B,CACFC,OADE,GAEFC,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,oBAAMC,KAAK,8CAAuCD,CAAC,CAACE,OAAzC,EAAX;AACH,aALE,CAD0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBP,qBAAqB;AAAA;AAAA;AAAA,GAA3B;AASP;;;;;;;;AAIO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACnC,SAAO,IAAIb,IAAI,CAACC,GAAL,CAASC,QAAb,CAAsBY,uBAAtB,EAAsCD,IAAtC,CAAP;AACH,CAFM",
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
      "sourcesContent": [
        "import LendingPoolAddressesProviderABI from \"../../abi/LendingPoolAddressesProvider.json\"\nimport LendingPoolABI from \"../../abi/LendingPool.json\"\n\n/**\n * Returns the Lending pool address provider contract\n * @param {contract address} address \n */\nexport const getLpAddressProviderContract = (address) => {\n    return new web3.eth.Contract(LendingPoolAddressesProviderABI, address)\n}\n\n/**\n * Returns the Lending pool address\n * @param @param {Address provider contract} lpAddressProviderContract \n */\nexport const getLendingPoolAddress = async (lpAddressProviderContract) => {\n    return lpAddressProviderContract.methods\n        .getPool()\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting lendingPool address: ${e.message}`)\n        })\n}\n\n/**\n * Returns the lending pooll contract\n * @param {Lending pool address} addr \n */\nexport const getlpContract = (addr) => {\n    return new web3.eth.Contract(LendingPoolABI, addr)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1745216131962
  },
  "{\"sourceRoot\":\"/home/ares/Documents/Dev/liquidator/src/utils/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ares/Documents/Dev/liquidator\",\"filename\":\"/home/ares/Documents/Dev/liquidator/src/utils/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ares/Documents/Dev/liquidator\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/utils/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ares/Documents/Dev/liquidator",
      "filename": "/home/ares/Documents/Dev/liquidator/src/utils/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ares/Documents/Dev/liquidator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ares/Documents/Dev/liquidator/src/utils/utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ares/Documents/Dev/liquidator/src/utils/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/utils/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAbiReserve = exports.convertUnits = void 0;\n\n/**\n * Function to convert units with 18 decimals\n * @param {Amount to convert} amount \n */\nvar convertUnits = function convertUnits(amount) {\n  return amount / 1e18;\n};\n\nexports.convertUnits = convertUnits;\n\nvar getAbiReserve = function getAbiReserve(reserves, reserve) {\n  return reserves.filter(function (element) {\n    return element['id'] == reserve;\n  })[0].abi;\n};\n\nexports.getAbiReserve = getAbiReserve;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRVbml0cyIsImFtb3VudCIsImdldEFiaVJlc2VydmUiLCJyZXNlcnZlcyIsInJlc2VydmUiLCJmaWx0ZXIiLCJlbGVtZW50IiwiYWJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFJTyxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxNQUFELEVBQVk7QUFDdEMsU0FBT0EsTUFBTSxHQUFHLElBQWhCO0FBQ0QsQ0FGTTs7OztBQUtBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsUUFBRCxFQUFXQyxPQUFYLEVBQXVCO0FBQ2xELFNBQU9ELFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQixVQUFDQyxPQUFELEVBQWE7QUFDbEMsV0FBUUEsT0FBTyxDQUFDLElBQUQsQ0FBUCxJQUFpQkYsT0FBekI7QUFDRCxHQUZNLEVBRUosQ0FGSSxFQUVERyxHQUZOO0FBR0QsQ0FKTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hcmVzL0RvY3VtZW50cy9EZXYvbGlxdWlkYXRvci9zcmMvdXRpbHMvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0byBjb252ZXJ0IHVuaXRzIHdpdGggMTggZGVjaW1hbHNcbiAqIEBwYXJhbSB7QW1vdW50IHRvIGNvbnZlcnR9IGFtb3VudCBcbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnZlcnRVbml0cyA9IChhbW91bnQpID0+IHtcbiAgcmV0dXJuIGFtb3VudCAvIDFlMThcbn1cblxuXG5leHBvcnQgY29uc3QgZ2V0QWJpUmVzZXJ2ZSA9IChyZXNlcnZlcywgcmVzZXJ2ZSkgPT4ge1xuICByZXR1cm4gcmVzZXJ2ZXMuZmlsdGVyKChlbGVtZW50KSA9PiB7XG4gICAgcmV0dXJuIChlbGVtZW50WydpZCddID09IHJlc2VydmUpO1xuICB9KVswXS5hYmk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "convertUnits",
        "amount",
        "getAbiReserve",
        "reserves",
        "reserve",
        "filter",
        "element",
        "abi"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAIO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACtC,SAAOA,MAAM,GAAG,IAAhB;AACD,CAFM;;;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,OAAX,EAAuB;AAClD,SAAOD,QAAQ,CAACE,MAAT,CAAgB,UAACC,OAAD,EAAa;AAClC,WAAQA,OAAO,CAAC,IAAD,CAAP,IAAiBF,OAAzB;AACD,GAFM,EAEJ,CAFI,EAEDG,GAFN;AAGD,CAJM",
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/utils/",
      "sourcesContent": [
        "/**\n * Function to convert units with 18 decimals\n * @param {Amount to convert} amount \n */\nexport const convertUnits = (amount) => {\n  return amount / 1e18\n}\n\n\nexport const getAbiReserve = (reserves, reserve) => {\n  return reserves.filter((element) => {\n    return (element['id'] == reserve);\n  })[0].abi;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1745216131962
  },
  "{\"sourceRoot\":\"/home/ares/Documents/Dev/liquidator/src/contracts/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ares/Documents/Dev/liquidator\",\"filename\":\"/home/ares/Documents/Dev/liquidator/src/contracts/contractData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ares/Documents/Dev/liquidator\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/ares/Documents/Dev/liquidator",
      "filename": "/home/ares/Documents/Dev/liquidator/src/contracts/contractData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ares/Documents/Dev/liquidator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ares/Documents/Dev/liquidator/src/contracts/contractData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ares/Documents/Dev/liquidator/src/contracts/contractData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
        "sourceFileName": "contractData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowance = exports.getUserBorrowBalances = exports.getUserUnderlyingAssetBalance = exports.getUserReserveData = exports.getUserAccountData = void 0;\n\n/**\n * Returns the Account data of the user\n * @param {Lending pool contract} lpContract \n * @param {User id to get the data} user \n */\nvar getUserAccountData = function getUserAccountData(lpContract, user) {\n  return lpContract.methods.getUserAccountData(user).call()[\"catch\"](function (e) {\n    throw Error(\"Error getting user account data: \".concat(e.message));\n  });\n};\n/**\n * \n * @param {Lending pool contract} lpContract \n * @param {Token reserve address} reserve \n * @param {User id to get the data} user \n */\n\n\nexports.getUserAccountData = getUserAccountData;\n\nvar getUserReserveData = function getUserReserveData(lpContract, reserve, user) {\n  return lpContract.methods.getUserReserveData(reserve, user).call()[\"catch\"](function (e) {\n    throw Error(\"Error getting user account data: \".concat(e.message));\n  });\n};\n/**\n * \n * @param {Lending pool core contract} lpCoreContract \n * @param {Collateral address} collateral \n * @param {User id to get the data} user \n */\n\n\nexports.getUserReserveData = getUserReserveData;\n\nvar getUserUnderlyingAssetBalance = function getUserUnderlyingAssetBalance(lpCoreContract, collateral, user) {\n  return lpCoreContract.methods.getUserUnderlyingAssetBalance(collateral, user).call()[\"catch\"](function (e) {\n    throw Error(\"Error getting user account data: \".concat(e.message));\n  });\n};\n/**\n * \n * @param {Lending pool core contract} lpCoreContract \n * @param {Collateral address} collateral \n * @param {User id to get the data} user \n */\n\n\nexports.getUserUnderlyingAssetBalance = getUserUnderlyingAssetBalance;\n\nvar getUserBorrowBalances = function getUserBorrowBalances(lpCoreContract, collateral, user) {\n  return lpCoreContract.methods.getUserBorrowBalances(collateral, user).call()[\"catch\"](function (e) {\n    throw Error(\"Error getting user account data: \".concat(e.message));\n  });\n};\n/**\n * \n * @param {er20 token contract} erc20Contract \n * @param {owner address of the token} owner \n * @param {spender address of the token} spender \n */\n\n\nexports.getUserBorrowBalances = getUserBorrowBalances;\n\nvar allowance = function allowance(erc20Contract, owner, spender) {\n  return erc20Contract.methods.allowance(owner, spender).call()[\"catch\"](function (e) {\n    throw Error(\"Error getting user account data: \".concat(e.message));\n  });\n};\n\nexports.allowance = allowance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyYWN0RGF0YS5qcyJdLCJuYW1lcyI6WyJnZXRVc2VyQWNjb3VudERhdGEiLCJscENvbnRyYWN0IiwidXNlciIsIm1ldGhvZHMiLCJjYWxsIiwiZSIsIkVycm9yIiwibWVzc2FnZSIsImdldFVzZXJSZXNlcnZlRGF0YSIsInJlc2VydmUiLCJnZXRVc2VyVW5kZXJseWluZ0Fzc2V0QmFsYW5jZSIsImxwQ29yZUNvbnRyYWN0IiwiY29sbGF0ZXJhbCIsImdldFVzZXJCb3Jyb3dCYWxhbmNlcyIsImFsbG93YW5jZSIsImVyYzIwQ29udHJhY3QiLCJvd25lciIsInNwZW5kZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7QUFLTyxJQUFNQSxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLENBQUNDLFVBQUQsRUFBYUMsSUFBYixFQUFzQjtBQUNwRCxTQUFPRCxVQUFVLENBQUNFLE9BQVgsQ0FDRkgsa0JBREUsQ0FDaUJFLElBRGpCLEVBRUZFLElBRkUsWUFHSSxVQUFDQyxDQUFELEVBQU87QUFDVixVQUFNQyxLQUFLLDRDQUFxQ0QsQ0FBQyxDQUFDRSxPQUF2QyxFQUFYO0FBQ0gsR0FMRSxDQUFQO0FBTUgsQ0FQTTtBQVNQOzs7Ozs7Ozs7O0FBTU8sSUFBTUMsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFxQixDQUFDUCxVQUFELEVBQWFRLE9BQWIsRUFBc0JQLElBQXRCLEVBQStCO0FBQzdELFNBQU9ELFVBQVUsQ0FBQ0UsT0FBWCxDQUNGSyxrQkFERSxDQUNpQkMsT0FEakIsRUFDMEJQLElBRDFCLEVBRUZFLElBRkUsWUFHSSxVQUFDQyxDQUFELEVBQU87QUFDVixVQUFNQyxLQUFLLDRDQUFxQ0QsQ0FBQyxDQUFDRSxPQUF2QyxFQUFYO0FBQ0gsR0FMRSxDQUFQO0FBTUgsQ0FQTTtBQVNQOzs7Ozs7Ozs7O0FBTU8sSUFBTUcsNkJBQTZCLEdBQUcsU0FBaENBLDZCQUFnQyxDQUFDQyxjQUFELEVBQWlCQyxVQUFqQixFQUE2QlYsSUFBN0IsRUFBc0M7QUFDL0UsU0FBT1MsY0FBYyxDQUFDUixPQUFmLENBQ0ZPLDZCQURFLENBQzRCRSxVQUQ1QixFQUN3Q1YsSUFEeEMsRUFFRkUsSUFGRSxZQUdJLFVBQUNDLENBQUQsRUFBTztBQUNWLFVBQU1DLEtBQUssNENBQXFDRCxDQUFDLENBQUNFLE9BQXZDLEVBQVg7QUFDSCxHQUxFLENBQVA7QUFNSCxDQVBNO0FBU1A7Ozs7Ozs7Ozs7QUFNTyxJQUFNTSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUNGLGNBQUQsRUFBaUJDLFVBQWpCLEVBQTZCVixJQUE3QixFQUFzQztBQUN2RSxTQUFPUyxjQUFjLENBQUNSLE9BQWYsQ0FDRlUscUJBREUsQ0FDb0JELFVBRHBCLEVBQ2dDVixJQURoQyxFQUVGRSxJQUZFLFlBR0ksVUFBQ0MsQ0FBRCxFQUFPO0FBQ1YsVUFBTUMsS0FBSyw0Q0FBcUNELENBQUMsQ0FBQ0UsT0FBdkMsRUFBWDtBQUNILEdBTEUsQ0FBUDtBQU1ILENBUE07QUFTUDs7Ozs7Ozs7OztBQU1PLElBQU1PLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLGFBQUQsRUFBZ0JDLEtBQWhCLEVBQXVCQyxPQUF2QixFQUFtQztBQUN4RCxTQUFPRixhQUFhLENBQUNaLE9BQWQsQ0FDRlcsU0FERSxDQUNRRSxLQURSLEVBQ2VDLE9BRGYsRUFFRmIsSUFGRSxZQUdJLFVBQUNDLENBQUQsRUFBTztBQUNWLFVBQU1DLEtBQUssNENBQXFDRCxDQUFDLENBQUNFLE9BQXZDLEVBQVg7QUFDSCxHQUxFLENBQVA7QUFNSCxDQVBNIiwic291cmNlUm9vdCI6Ii9ob21lL2FyZXMvRG9jdW1lbnRzL0Rldi9saXF1aWRhdG9yL3NyYy9jb250cmFjdHMvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRoZSBBY2NvdW50IGRhdGEgb2YgdGhlIHVzZXJcbiAqIEBwYXJhbSB7TGVuZGluZyBwb29sIGNvbnRyYWN0fSBscENvbnRyYWN0IFxuICogQHBhcmFtIHtVc2VyIGlkIHRvIGdldCB0aGUgZGF0YX0gdXNlciBcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFVzZXJBY2NvdW50RGF0YSA9IChscENvbnRyYWN0LCB1c2VyKSA9PiB7XG4gICAgcmV0dXJuIGxwQ29udHJhY3QubWV0aG9kc1xuICAgICAgICAuZ2V0VXNlckFjY291bnREYXRhKHVzZXIpXG4gICAgICAgIC5jYWxsKClcbiAgICAgICAgLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgRXJyb3IgZ2V0dGluZyB1c2VyIGFjY291bnQgZGF0YTogJHtlLm1lc3NhZ2V9YClcbiAgICAgICAgfSlcbn1cblxuLyoqXG4gKiBcbiAqIEBwYXJhbSB7TGVuZGluZyBwb29sIGNvbnRyYWN0fSBscENvbnRyYWN0IFxuICogQHBhcmFtIHtUb2tlbiByZXNlcnZlIGFkZHJlc3N9IHJlc2VydmUgXG4gKiBAcGFyYW0ge1VzZXIgaWQgdG8gZ2V0IHRoZSBkYXRhfSB1c2VyIFxuICovXG5leHBvcnQgY29uc3QgZ2V0VXNlclJlc2VydmVEYXRhID0gKGxwQ29udHJhY3QsIHJlc2VydmUsIHVzZXIpID0+IHtcbiAgICByZXR1cm4gbHBDb250cmFjdC5tZXRob2RzXG4gICAgICAgIC5nZXRVc2VyUmVzZXJ2ZURhdGEocmVzZXJ2ZSwgdXNlcilcbiAgICAgICAgLmNhbGwoKVxuICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBFcnJvciBnZXR0aW5nIHVzZXIgYWNjb3VudCBkYXRhOiAke2UubWVzc2FnZX1gKVxuICAgICAgICB9KVxufVxuXG4vKipcbiAqIFxuICogQHBhcmFtIHtMZW5kaW5nIHBvb2wgY29yZSBjb250cmFjdH0gbHBDb3JlQ29udHJhY3QgXG4gKiBAcGFyYW0ge0NvbGxhdGVyYWwgYWRkcmVzc30gY29sbGF0ZXJhbCBcbiAqIEBwYXJhbSB7VXNlciBpZCB0byBnZXQgdGhlIGRhdGF9IHVzZXIgXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRVc2VyVW5kZXJseWluZ0Fzc2V0QmFsYW5jZSA9IChscENvcmVDb250cmFjdCwgY29sbGF0ZXJhbCwgdXNlcikgPT4ge1xuICAgIHJldHVybiBscENvcmVDb250cmFjdC5tZXRob2RzXG4gICAgICAgIC5nZXRVc2VyVW5kZXJseWluZ0Fzc2V0QmFsYW5jZShjb2xsYXRlcmFsLCB1c2VyKVxuICAgICAgICAuY2FsbCgpXG4gICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEVycm9yIGdldHRpbmcgdXNlciBhY2NvdW50IGRhdGE6ICR7ZS5tZXNzYWdlfWApXG4gICAgICAgIH0pXG59XG5cbi8qKlxuICogXG4gKiBAcGFyYW0ge0xlbmRpbmcgcG9vbCBjb3JlIGNvbnRyYWN0fSBscENvcmVDb250cmFjdCBcbiAqIEBwYXJhbSB7Q29sbGF0ZXJhbCBhZGRyZXNzfSBjb2xsYXRlcmFsIFxuICogQHBhcmFtIHtVc2VyIGlkIHRvIGdldCB0aGUgZGF0YX0gdXNlciBcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFVzZXJCb3Jyb3dCYWxhbmNlcyA9IChscENvcmVDb250cmFjdCwgY29sbGF0ZXJhbCwgdXNlcikgPT4ge1xuICAgIHJldHVybiBscENvcmVDb250cmFjdC5tZXRob2RzXG4gICAgICAgIC5nZXRVc2VyQm9ycm93QmFsYW5jZXMoY29sbGF0ZXJhbCwgdXNlcilcbiAgICAgICAgLmNhbGwoKVxuICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBFcnJvciBnZXR0aW5nIHVzZXIgYWNjb3VudCBkYXRhOiAke2UubWVzc2FnZX1gKVxuICAgICAgICB9KVxufVxuXG4vKipcbiAqIFxuICogQHBhcmFtIHtlcjIwIHRva2VuIGNvbnRyYWN0fSBlcmMyMENvbnRyYWN0IFxuICogQHBhcmFtIHtvd25lciBhZGRyZXNzIG9mIHRoZSB0b2tlbn0gb3duZXIgXG4gKiBAcGFyYW0ge3NwZW5kZXIgYWRkcmVzcyBvZiB0aGUgdG9rZW59IHNwZW5kZXIgXG4gKi9cbmV4cG9ydCBjb25zdCBhbGxvd2FuY2UgPSAoZXJjMjBDb250cmFjdCwgb3duZXIsIHNwZW5kZXIpID0+IHtcbiAgICByZXR1cm4gZXJjMjBDb250cmFjdC5tZXRob2RzXG4gICAgICAgIC5hbGxvd2FuY2Uob3duZXIsIHNwZW5kZXIpXG4gICAgICAgIC5jYWxsKClcbiAgICAgICAgLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgRXJyb3IgZ2V0dGluZyB1c2VyIGFjY291bnQgZGF0YTogJHtlLm1lc3NhZ2V9YClcbiAgICAgICAgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "contractData.js"
      ],
      "names": [
        "getUserAccountData",
        "lpContract",
        "user",
        "methods",
        "call",
        "e",
        "Error",
        "message",
        "getUserReserveData",
        "reserve",
        "getUserUnderlyingAssetBalance",
        "lpCoreContract",
        "collateral",
        "getUserBorrowBalances",
        "allowance",
        "erc20Contract",
        "owner",
        "spender"
      ],
      "mappings": ";;;;;;;AAAA;;;;;AAKO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAaC,IAAb,EAAsB;AACpD,SAAOD,UAAU,CAACE,OAAX,CACFH,kBADE,CACiBE,IADjB,EAEFE,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,UAAMC,KAAK,4CAAqCD,CAAC,CAACE,OAAvC,EAAX;AACH,GALE,CAAP;AAMH,CAPM;AASP;;;;;;;;;;AAMO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACP,UAAD,EAAaQ,OAAb,EAAsBP,IAAtB,EAA+B;AAC7D,SAAOD,UAAU,CAACE,OAAX,CACFK,kBADE,CACiBC,OADjB,EAC0BP,IAD1B,EAEFE,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,UAAMC,KAAK,4CAAqCD,CAAC,CAACE,OAAvC,EAAX;AACH,GALE,CAAP;AAMH,CAPM;AASP;;;;;;;;;;AAMO,IAAMG,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,cAAD,EAAiBC,UAAjB,EAA6BV,IAA7B,EAAsC;AAC/E,SAAOS,cAAc,CAACR,OAAf,CACFO,6BADE,CAC4BE,UAD5B,EACwCV,IADxC,EAEFE,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,UAAMC,KAAK,4CAAqCD,CAAC,CAACE,OAAvC,EAAX;AACH,GALE,CAAP;AAMH,CAPM;AASP;;;;;;;;;;AAMO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,cAAD,EAAiBC,UAAjB,EAA6BV,IAA7B,EAAsC;AACvE,SAAOS,cAAc,CAACR,OAAf,CACFU,qBADE,CACoBD,UADpB,EACgCV,IADhC,EAEFE,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,UAAMC,KAAK,4CAAqCD,CAAC,CAACE,OAAvC,EAAX;AACH,GALE,CAAP;AAMH,CAPM;AASP;;;;;;;;;;AAMO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,aAAD,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAmC;AACxD,SAAOF,aAAa,CAACZ,OAAd,CACFW,SADE,CACQE,KADR,EACeC,OADf,EAEFb,IAFE,YAGI,UAACC,CAAD,EAAO;AACV,UAAMC,KAAK,4CAAqCD,CAAC,CAACE,OAAvC,EAAX;AACH,GALE,CAAP;AAMH,CAPM",
      "sourceRoot": "/home/ares/Documents/Dev/liquidator/src/contracts/",
      "sourcesContent": [
        "/**\n * Returns the Account data of the user\n * @param {Lending pool contract} lpContract \n * @param {User id to get the data} user \n */\nexport const getUserAccountData = (lpContract, user) => {\n    return lpContract.methods\n        .getUserAccountData(user)\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting user account data: ${e.message}`)\n        })\n}\n\n/**\n * \n * @param {Lending pool contract} lpContract \n * @param {Token reserve address} reserve \n * @param {User id to get the data} user \n */\nexport const getUserReserveData = (lpContract, reserve, user) => {\n    return lpContract.methods\n        .getUserReserveData(reserve, user)\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting user account data: ${e.message}`)\n        })\n}\n\n/**\n * \n * @param {Lending pool core contract} lpCoreContract \n * @param {Collateral address} collateral \n * @param {User id to get the data} user \n */\nexport const getUserUnderlyingAssetBalance = (lpCoreContract, collateral, user) => {\n    return lpCoreContract.methods\n        .getUserUnderlyingAssetBalance(collateral, user)\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting user account data: ${e.message}`)\n        })\n}\n\n/**\n * \n * @param {Lending pool core contract} lpCoreContract \n * @param {Collateral address} collateral \n * @param {User id to get the data} user \n */\nexport const getUserBorrowBalances = (lpCoreContract, collateral, user) => {\n    return lpCoreContract.methods\n        .getUserBorrowBalances(collateral, user)\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting user account data: ${e.message}`)\n        })\n}\n\n/**\n * \n * @param {er20 token contract} erc20Contract \n * @param {owner address of the token} owner \n * @param {spender address of the token} spender \n */\nexport const allowance = (erc20Contract, owner, spender) => {\n    return erc20Contract.methods\n        .allowance(owner, spender)\n        .call()\n        .catch((e) => {\n            throw Error(`Error getting user account data: ${e.message}`)\n        })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1745216131962
  }
}