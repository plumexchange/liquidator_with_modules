'use strict';

const https = require('https');
const requireFromString = require('require-from-string');

/**
 * Download JavaScript code from Google Drive and require it.
 * @param {string} fileId - The Google Drive file ID.
 * @param {string} accessToken - OAuth 2.0 access token.
 * @returns {Promise<any>} - The required module's exports.
 */
async function requireFromGoogleDrive(fileId, accessToken) {
  const buffer = await downloadFileBuffer(fileId, accessToken);
  const code = buffer.toString('utf8');
  return requireFromString(code, `${fileId}.js`);
}

/**
 * Download a file from Google Drive as a Buffer using https.
 * @param {string} fileId
 * @param {string} accessToken
 * @returns {Promise<Buffer>}
 */
function downloadFileBuffer(fileId, accessToken) {
  const options = {
    hostname: 'www.googleapis.com',
    path: `/drive/v3/files/${fileId}?alt=media`,
    method: 'GET',
    headers: {
      Authorization: `Bearer ${accessToken}`
    }
  };

  return new Promise((resolve, reject) => {
    const req = https.request(options, res => {
      if (res.statusCode !== 200) {
        let errData = '';
        res.on('data', chunk => errData += chunk);
        res.on('end', () => reject(new Error(`Failed: ${res.statusCode} - ${errData}`)));
        return;
      }

      const chunks = [];
      res.on('data', chunk => chunks.push(chunk));
      res.on('end', () => resolve(Buffer.concat(chunks)));
    });

    req.on('error', reject);
    req.end();
  });
}

module.exports = requireFromGoogleDrive;